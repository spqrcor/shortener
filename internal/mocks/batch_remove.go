// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/batch_remove.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockBatchRemover is a mock of BatchRemover interface.
type MockBatchRemover struct {
	ctrl     *gomock.Controller
	recorder *MockBatchRemoverMockRecorder
}

// MockBatchRemoverMockRecorder is the mock recorder for MockBatchRemover.
type MockBatchRemoverMockRecorder struct {
	mock *MockBatchRemover
}

// NewMockBatchRemover creates a new mock instance.
func NewMockBatchRemover(ctrl *gomock.Controller) *MockBatchRemover {
	mock := &MockBatchRemover{ctrl: ctrl}
	mock.recorder = &MockBatchRemoverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchRemover) EXPECT() *MockBatchRemoverMockRecorder {
	return m.recorder
}

// DeleteShortURL mocks base method.
func (m *MockBatchRemover) DeleteShortURL(UserID uuid.UUID, shorts []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteShortURL", UserID, shorts)
}

// DeleteShortURL indicates an expected call of DeleteShortURL.
func (mr *MockBatchRemoverMockRecorder) DeleteShortURL(UserID, shorts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShortURL", reflect.TypeOf((*MockBatchRemover)(nil).DeleteShortURL), UserID, shorts)
}
